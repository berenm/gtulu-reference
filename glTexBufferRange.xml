<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook MathML Module V1.1b1//EN"
              "http://www.oasis-open.org/docbook/xml/mathml/1.1CR1/dbmathml.dtd">
<refentry id="glTexBufferRange">
    <refmeta>
        <refmetainfo>
            <copyright>
                <year>2012</year>
                <holder>Khronos Group</holder>
            </copyright>
        </refmetainfo>
        <refentrytitle>glTexBufferRange</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glTexBufferRange</refname>
        <refpurpose>bind a range of a buffer's data store to a buffer texture</refpurpose>
    </refnamediv>
    <refsynopsisdiv><title>C Specification</title>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glTexBufferRange</function></funcdef>
                <paramdef>GLenum <parameter>target</parameter></paramdef>
                <paramdef>GLenum <parameter>internalFormat</parameter></paramdef>
                <paramdef>GLuint <parameter>buffer</parameter></paramdef>
                <paramdef>GLintptr <parameter>offset</parameter></paramdef>
                <paramdef>GLsizeiptr <parameter>size</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <refsect1 id="parameters"><title>Parameters</title>
        <variablelist>
        <varlistentry>
            <term><parameter>target</parameter></term>
            <listitem>
                <para>
                    Specifies the target of the operation and must be <constant>GL_TEXTURE_BUFFER</constant>.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>internalFormat</parameter></term>
            <listitem>
                <para>
                    Specifies the internal format of the data in the store belonging to <parameter>buffer</parameter>.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>buffer</parameter></term>
            <listitem>
                <para>
                    Specifies the name of the buffer object whose storage to attach to the active buffer texture.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>offset</parameter></term>
            <listitem>
                <para>
                    Specifies the offset of the start of the range of the buffer's data store to attach.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>size</parameter></term>
            <listitem>
                <para>
                    Specifies the size of the range of the buffer's data store to attach.
                </para>
            </listitem>
        </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 id="description"><title>Description</title>
        <para>
            <function>glTexBufferRange</function> attaches the a range of the data store of the buffer object named <parameter>buffer</parameter> to the active
            buffer texture, and specifies the internal format for the texel array found in the attached buffer object. If <parameter>buffer</parameter>
            is zero, any buffer object attached to the buffer texture is detached and no new buffer object is attached. If <parameter>buffer</parameter>
            is non-zero, it must be the name of an existing buffer object. <parameter>target</parameter> must be <constant>GL_TEXTURE_BUFFER</constant>.
            The start of the range is specified by <parameter>offset</parameter> and the size of the range is specified by <parameter>size</parameter>,
            both measured in basic machine units. <parameter>offset</parameter> must be greater than or equal to zero, <parameter>size</parameter> must be greater
            than zero, and the sum of <parameter>offset</parameter> and <parameter>size</parameter> not exceed the value
            of <constant>GL_BUFFER_SIZE</constant> for <parameter>buffer</parameter>. Furthermore, <parameter>offset</parameter> must be
            an integer multiple of the value of <constant>GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT</constant>.
            <parameter>internalformat</parameter> specifies the storage format, and must be one of the following sized internal formats:
        </para>
        <informaltable frame="topbot">
            <tgroup cols="8" align="left">
                <colspec colnum="1" colname="col1" colwidth="1*"/>
                <colspec colnum="2" colname="col2" colwidth="2*"/>
                <colspec colnum="3" colname="col3" colwidth="1.5*"/>
                <colspec colnum="4" colname="col4" colwidth="1*"/>
                <colspec colnum="5" colname="col5" colwidth="1*"/>
                <colspec colnum="6" colname="col6" colwidth="2*"/>
                <colspec colnum="7" colname="col7" colwidth="1.5*"/>
                <colspec colnum="8" colname="col8" colwidth="1*"/>
                <thead>
                    <row>
                        <entry morerows="1" rowsep="1" align="center"></entry>
                        <entry morerows="1" rowsep="1" align="center"></entry>
                        <entry morerows="1" rowsep="1" align="center"></entry>
                        <entry morerows="1" rowsep="1" align="center"></entry>
                        <entry namest="col5" nameend="col8" rowsep="1" align="left"><emphasis role="bold">
                        Component
                        </emphasis></entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry align="left"><emphasis role="bold">Sized Internal Format</emphasis></entry>
                        <entry align="left"><emphasis role="bold">Base Type</emphasis></entry>
                        <entry align="left"><emphasis role="bold">Components</emphasis></entry>
                        <entry align="left"><emphasis role="bold">Norm</emphasis></entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                        <entry align="center">2</entry>
                        <entry align="center">3</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_R8</constant></entry>
                        <entry align="left">ubyte</entry>
                        <entry align="left">1</entry>
                        <entry align="left">YES</entry>
                        <entry align="center">R</entry>
                        <entry align="center">0</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_R16</constant></entry>
                        <entry align="left">ushort</entry>
                        <entry align="left">1</entry>
                        <entry align="left">YES</entry>
                        <entry align="center">R</entry>
                        <entry align="center">0</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_R16F</constant></entry>
                        <entry align="left">half</entry>
                        <entry align="left">1</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">0</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_R32F</constant></entry>
                        <entry align="left">float</entry>
                        <entry align="left">1</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">0</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_R8I</constant></entry>
                        <entry align="left">byte</entry>
                        <entry align="left">1</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">0</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_R16I</constant></entry>
                        <entry align="left">short</entry>
                        <entry align="left">1</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">0</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_R32I</constant></entry>
                        <entry align="left">int</entry>
                        <entry align="left">1</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">0</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_R8UI</constant></entry>
                        <entry align="left">ubyte</entry>
                        <entry align="left">1</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">0</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_R16UI</constant></entry>
                        <entry align="left">ushort</entry>
                        <entry align="left">1</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">0</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_R32UI</constant></entry>
                        <entry align="left">uint</entry>
                        <entry align="left">1</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">0</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RG8</constant></entry>
                        <entry align="left">ubyte</entry>
                        <entry align="left">2</entry>
                        <entry align="left">YES</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RG16</constant></entry>
                        <entry align="left">ushort</entry>
                        <entry align="left">2</entry>
                        <entry align="left">YES</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RG16F</constant></entry>
                        <entry align="left">half</entry>
                        <entry align="left">2</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RG32F</constant></entry>
                        <entry align="left">float</entry>
                        <entry align="left">2</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RG8I</constant></entry>
                        <entry align="left">byte</entry>
                        <entry align="left">2</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RG16I</constant></entry>
                        <entry align="left">short</entry>
                        <entry align="left">2</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RG32I</constant></entry>
                        <entry align="left">int</entry>
                        <entry align="left">2</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RG8UI</constant></entry>
                        <entry align="left">ubyte</entry>
                        <entry align="left">2</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RG16UI</constant></entry>
                        <entry align="left">ushort</entry>
                        <entry align="left">2</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RG32UI</constant></entry>
                        <entry align="left">uint</entry>
                        <entry align="left">2</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">0</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RGB32F</constant></entry>
                        <entry align="left">float</entry>
                        <entry align="left">3</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">B</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RGB32I</constant></entry>
                        <entry align="left">int</entry>
                        <entry align="left">3</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">B</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RGB32UI</constant></entry>
                        <entry align="left">uint</entry>
                        <entry align="left">3</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">B</entry>
                        <entry align="center">1</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RGBA8</constant></entry>
                        <entry align="left">uint</entry>
                        <entry align="left">4</entry>
                        <entry align="left">YES</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">B</entry>
                        <entry align="center">A</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RGBA16</constant></entry>
                        <entry align="left">short</entry>
                        <entry align="left">4</entry>
                        <entry align="left">YES</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">B</entry>
                        <entry align="center">A</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RGBA16F</constant></entry>
                        <entry align="left">half</entry>
                        <entry align="left">4</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">B</entry>
                        <entry align="center">A</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RGBA32F</constant></entry>
                        <entry align="left">float</entry>
                        <entry align="left">4</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">B</entry>
                        <entry align="center">A</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RGBA8I</constant></entry>
                        <entry align="left">byte</entry>
                        <entry align="left">4</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">B</entry>
                        <entry align="center">A</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RGBA16I</constant></entry>
                        <entry align="left">short</entry>
                        <entry align="left">4</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">B</entry>
                        <entry align="center">A</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RGBA32I</constant></entry>
                        <entry align="left">int</entry>
                        <entry align="left">4</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">B</entry>
                        <entry align="center">A</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RGBA8UI</constant></entry>
                        <entry align="left">ubyte</entry>
                        <entry align="left">4</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">B</entry>
                        <entry align="center">A</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RGBA16UI</constant></entry>
                        <entry align="left">ushort</entry>
                        <entry align="left">4</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">B</entry>
                        <entry align="center">A</entry>
                    </row>
                    <row>
                        <entry align="left"><constant>GL_RGBA32UI</constant></entry>
                        <entry align="left">uint</entry>
                        <entry align="left">4</entry>
                        <entry align="left">NO</entry>
                        <entry align="center">R</entry>
                        <entry align="center">G</entry>
                        <entry align="center">B</entry>
                        <entry align="center">A</entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
    </refsect1>
    <refsect1 id="errors"><title>Errors</title>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>target</parameter> is not
            <constant>GL_TEXTURE_BUFFER</constant>.
        </para>
        <para>
            <constant>GL_INVALID_VALUE</constant> is generated if <parameter>offset</parameter> is less than zero.
        </para>
        <para>
            <constant>GL_INVALID_VALUE</constant> is generated if <parameter>size</parameter> is less than or equal to zero.
        </para>
        <para>
            <constant>GL_INVALID_VALUE</constant> is generated if <parameter>offset</parameter> + <parameter>size</parameter> is
            greater than the value of <constant>GL_BUFFER_SIZE</constant> for <parameter>buffer</parameter>.
        </para>
        <para>
            <constant>GL_INVALID_VALUE</constant> is generated if <parameter>offset</parameter> is not
            an integer multiple of the value of <constant>GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT</constant>.
        </para>
    </refsect1>
    <refsect1 id="associatedgets"><title>Associated Gets</title>
        <para>
            <citerefentry><refentrytitle>glGet</refentrytitle></citerefentry> with argument <constant>GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glGetTexLevelParameter</refentrytitle></citerefentry> with arguments <constant>GL_TEXTURE_BUFFER_OFFSET</constant>
            or <constant>GL_TEXTURE_BUFFER_SIZE</constant>.
        </para>
    </refsect1>
    <refsect1 id="seealso"><title>See Also</title>
        <para>
            <citerefentry><refentrytitle>glTexBuffer</refentrytitle></citerefentry>.
        </para>
    </refsect1>
    <refsect1 id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"></trademark> 2012 Khronos Group. 
            This material may be distributed subject to the terms and conditions set forth in 
            the Open Publication License, v 1.0, 8 June 1999.
            <ulink url="http://opencontent.org/openpub/">http://opencontent.org/openpub/</ulink>.
        </para>
    </refsect1>
</refentry>
