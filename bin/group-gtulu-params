#!/usr/bin/python

import os, sys, re, yaml
import gtuluref

class literal_unicode(unicode): pass
def literal_unicode_representer(dumper, data):
    return dumper.represent_scalar(u'tag:yaml.org,2002:str', data, style='|')
yaml.add_representer(literal_unicode, literal_unicode_representer)

class hexadecimal(long): pass
def hexadecimal_representer(dumper, data):
    return dumper.represent_scalar(u'tag:yaml.org,2002:int', hex(data).strip('L'))
yaml.add_representer(hexadecimal, hexadecimal_representer)


args = gtuluref.arguments()

usages = {}
fct_usages = {}

folder = gtuluref.ref(args.version, args.compat and 'comp' or 'core', 'function')
ffolder = folder
for filename in os.listdir(folder):
  with open(os.path.join(folder, filename), 'r') as f:
    fct = yaml.load(f)

  if 'params' in fct['gtu']:
    for p in fct['gtu']['params']:
      if 'values' in p:
        p['values'] = sorted(set(p['values']))

        usage_key = '%s.%s' % (fct['gl']['name'], p['name'])
        for v in p['values']:
          if not v in usages:
            usages[v] = []
          usages[v].append(usage_key)

        del p['values']

  if 'precall' in fct['gtu']:
    fct['gtu']['precall'] = literal_unicode(fct['gtu']['precall'])

  if 'postcall' in fct['gtu']:
    fct['gtu']['postcall'] = literal_unicode(fct['gtu']['postcall'])

  with open(os.path.join(folder, filename), 'w') as f:
    yaml.dump(fct, f, default_flow_style=False)


folder = gtuluref.ref(args.version, args.compat and 'comp' or 'core', 'constant')
for filename in os.listdir(folder):
  with open(os.path.join(folder, filename), 'r') as f:
    cst = yaml.load(f)

  if not 'usage' in cst:
    cst['usage'] = []

  if filename in usages:
    cst['usage'] = sorted(set(cst['usage']) | set(usages[filename]))

  usage = []
  for fp in cst['usage']:
    if os.path.exists(os.path.join(ffolder, fp.split('.')[0])):
      usage.append(fp)
  cst['usage'] = sorted(usage)

  if 'values' in cst:
    cst['values'] = [hexadecimal(v) for v in cst['values']]
  elif 'value' in cst:
    cst['value'] = hexadecimal(cst['value'])

  with open(os.path.join(folder, filename), 'w') as f:
    yaml.dump(cst, f, default_flow_style=False)
