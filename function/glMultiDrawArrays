gl:
  name: glMultiDrawArrays
  params:
  - mapping: mode
    name: mode
    type: GLenum
  - mapping: '&firsts[0]'
    name: first
    type: GLint const*
  - mapping: '&counts[0]'
    name: count
    type: GLsizei const*
  - mapping: arrays.size()
    name: drawcount
    type: GLsizei
  return: void
gtu:
  name: draw_arrays
  params:
  - name: mode
    type: gtu::constant const
  - name: arrays
    type: std::vector< std::tuple< gtu::size, int32_t > > const&
  precall: |
    std::vector< gtu::size > counts;
    std::vector< int32_t >   firsts;
    typedef std::tuple< gtu::size, int32_t > vtype;
    std::transform(arrays.begin(), arrays.end(), std::back_inserter(counts), [](vtype const& e) { return std::get< 0 >(e); });
    std::transform(arrays.begin(), arrays.end(), std::back_inserter(firsts), [](vtype const& e) { return std::get< 1 >(e); });
  return: void
