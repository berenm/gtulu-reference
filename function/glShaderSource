gl:
  name: glShaderSource
  params:
  - mapping: shader
    name: shader
    type: GLuint
  - mapping: lines.size()
    name: count
    type: GLsizei
  - mapping: '&strings[0]'
    name: string
    type: const GLchar* const*
  - mapping: '&lengths[0]'
    name: length
    type: GLint const*
  return: void
gtu:
  name: shader_source
  params:
  - name: shader
    type: gtu::shader const
  - name: lines
    type: std::vector< std::string > const&
  precall: |
    std::vector< char const* >  strings;
    std::vector< int32_t >      lengths;
    std::transform(lines.begin(), lines.end(), std::back_inserter(strings), [](std::string const& e) { return e.data(); });
    std::transform(lines.begin(), lines.end(), std::back_inserter(lengths), [](std::string const& e) { return e.size(); });
  return: void
