gl:
  name: glGetShaderSource
  params:
  - mapping: shader
    name: shader
    type: GLuint
  - mapping: shader_source.capacity()
    name: bufSize
    type: GLsizei
  - mapping: nullptr
    name: length
    type: GLsizei*
  - mapping: '&shader_source[0]'
    name: source
    type: GLchar*
  return: void
gtu:
  name: get_shader_source
  params:
  - name: shader
    type: gtu::shader const
  precall: |
    gtu::vec1< int32_t > length;
    api::get_shader(shader, cst::shader_source_length, length);
    std::string shader_source(length[0] - 1, '\0');
  postcall: |
    return shader_source;
  return: std::string
