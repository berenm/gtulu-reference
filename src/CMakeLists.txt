include_directories(
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${CMAKE_BINARY_DIR}
)

message(STATUS "${GTULU_API_SOURCE_DIR}")

string(REGEX REPLACE "^.*/([.0-9]+).*$" "\\1" GTULU_VERSION        ${GTULU_API_SOURCE_DIR})
string(REGEX REPLACE "\\..*$"           ""    GTULU_VERSION_MAJOR  ${GTULU_VERSION})
string(REGEX REPLACE "^.*\\."           ""    GTULU_VERSION_MINOR  ${GTULU_VERSION})

string(REGEX REPLACE "/${GTULU_VERSION}.*" ""  GTULU_TARGET_PREFIX "${GTULU_API_SOURCE_DIR}")
string(REPLACE       "/"                   "-" GTULU_TARGET_PREFIX "${GTULU_TARGET_PREFIX}")
set(GTULU_TARGET_PREFIX gtulu-api-${GTULU_TARGET_PREFIX})

set(CHEETAH_ENVIRONMENT "")
list(APPEND CHEETAH_ENVIRONMENT "PYTHONPATH=${CMAKE_SOURCE_DIR}/bin")
list(APPEND CHEETAH_ENVIRONMENT "GTULU_API_SOURCE_DIR=${CMAKE_SOURCE_DIR}/${GTULU_API_SOURCE_DIR}")

# add_submodule(${GTULU_TARGET_PREFIX} git://github.com/berenm/gtulu-reference.git ${GTULU_API_SOURCE_DIR})

file(GLOB_RECURSE GTULU_API_SOURCES ${CMAKE_SOURCE_DIR}/bin/* ${CMAKE_SOURCE_DIR}/${GTULU_API_SOURCE_DIR}/function/* ${CMAKE_SOURCE_DIR}/${GTULU_API_SOURCE_DIR}/constant/*)
set(GTULU_CHEETAH_PROPERTIES
  DEPENDS ${GTULU_API_SOURCES}
  ENVIRONMENT ${CHEETAH_ENVIRONMENT}
)

cheetah_generate(${GTULU_TARGET_PREFIX}-ni-cpp api_ni.tcpp OUTPUT_VARIABLE GTULU_API_NI_CPP ${GTULU_CHEETAH_PROPERTIES})
cheetah_generate(${GTULU_TARGET_PREFIX}-hpp    api.thpp    OUTPUT_VARIABLE GTULU_API_HPP    ${GTULU_CHEETAH_PROPERTIES})
cheetah_generate(${GTULU_TARGET_PREFIX}-cpp    api.tcpp    OUTPUT_VARIABLE GTULU_API_CPP    ${GTULU_CHEETAH_PROPERTIES})
set_source_files_properties(${GTULU_API_CPP} PROPERTIES OBJECT_DEPENDS ${GTULU_API_HPP})


set(GTULU_LIBRARY_PROPERTIES
  VERSION       ${GTULU_VERSION}
  SOVERSION     ${GTULU_VERSION_MAJOR}
  COMPILE_FLAGS "-fvisibility=hidden"
  LINK_FLAGS    "-Wl,--as-needed -Wl,--no-undefined"
)

add_library(${GTULU_TARGET_PREFIX}_ni ${GTULU_API_NI_CPP})
set_target_properties(${GTULU_TARGET_PREFIX}_ni PROPERTIES
  SONAME        lib${GTULU_TARGET_PREFIX}-ni${GTULU_VERSION_MAJOR}
  OUTPUT_NAME   ${GTULU_TARGET_PREFIX}-ni
  ${GTULU_LIBRARY_PROPERTIES}
)
target_link_libraries(${GTULU_TARGET_PREFIX}_ni corefungi logging)


add_library(${GTULU_TARGET_PREFIX} ${GTULU_API_HPP} ${GTULU_API_CPP})
set_target_properties(${GTULU_TARGET_PREFIX} PROPERTIES
  SONAME        lib${GTULU_TARGET_PREFIX}${GTULU_VERSION_MAJOR}
  OUTPUT_NAME   ${GTULU_TARGET_PREFIX}
  PUBLIC_HEADER ${GTULU_API_HPP}
  PUBLIC_HEADER gtulu/types.h
  ${GTULU_LIBRARY_PROPERTIES}
)
target_link_libraries(${GTULU_TARGET_PREFIX} ${GTULU_TARGET_PREFIX}_ni corefungi logging)

install(TARGETS ${GTULU_TARGET_PREFIX} ${GTULU_TARGET_PREFIX}_ni
  LIBRARY       DESTINATION ${CMAKE_INSTALL_LIBDIR}
  ARCHIVE       DESTINATION ${CMAKE_INSTALL_LIBDIR}
  PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
)
